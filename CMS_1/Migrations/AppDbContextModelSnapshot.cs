// <auto-generated />
using System;
using CMS_1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS_1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CMS_1.Models.Barcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BarCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CodeUsageLimit")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCampaign")
                        .HasColumnType("int");

                    b.Property<int?>("IdCharset")
                        .HasColumnType("int");

                    b.Property<bool>("IsScanned")
                        .HasColumnType("bit");

                    b.Property<string>("Owner")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("QRcode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ScannedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Unlimited")
                        .HasColumnType("bit");

                    b.Property<int>("Used")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("IdCampaign");

                    b.HasIndex("IdCharset");

                    b.ToTable("Barcode");
                });

            modelBuilder.Entity("CMS_1.Models.Campaignn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AutoUpdate")
                        .HasColumnType("bit");

                    b.Property<int>("CountCode")
                        .HasColumnType("int");

                    b.Property<string>("Decription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("EndDay")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<int?>("IdProgramSize")
                        .HasColumnType("int");

                    b.Property<bool>("JoinOnlyOne")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("StartDay")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("IdProgramSize");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Campaign");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AutoUpdate = true,
                            CountCode = 0,
                            Decription = "Defaut campaign",
                            EndDay = new DateTime(2020, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new TimeSpan(0, 23, 59, 59, 0),
                            IdProgramSize = 1,
                            JoinOnlyOne = true,
                            Name = "Campaign 1",
                            StartDay = new DateTime(2020, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new TimeSpan(0, 7, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("CMS_1.Models.Charset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Charset");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Numbers"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Character"
                        },
                        new
                        {
                            Id = 3,
                            Name = "All"
                        });
                });

            modelBuilder.Entity("CMS_1.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfBusiness")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Quận 6, TPHCM",
                            DoB = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsBlock = false,
                            Name = "Nguyễn Hữu Huân",
                            PhoneNumber = "0901456781",
                            Position = "Chủ",
                            TypeOfBusiness = "Khách sạn"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Quận 5, TPHCM",
                            DoB = new DateTime(1974, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsBlock = false,
                            Name = "Nguyễn Trọng Hữu",
                            PhoneNumber = "0907852781",
                            Position = "Quản lý",
                            TypeOfBusiness = "Nhà hàng"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Quận 7, TPHCM",
                            DoB = new DateTime(1975, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsBlock = false,
                            Name = "Trần Hùng Phát",
                            PhoneNumber = "0901485381",
                            Position = "Bếp",
                            TypeOfBusiness = "Quán ăn"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Bến Lức, Long An",
                            DoB = new DateTime(1976, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsBlock = false,
                            Name = "Lê Ngọc Anh",
                            PhoneNumber = "0901451981",
                            Position = "Chủ",
                            TypeOfBusiness = "Bán sỉ"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Biên Hòa, Đồng Nai",
                            DoB = new DateTime(1977, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsBlock = false,
                            Name = "Lê Phan",
                            PhoneNumber = "0901742681",
                            Position = "Quản lý",
                            TypeOfBusiness = "Quán ăn"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Bến Lức, Long An",
                            DoB = new DateTime(1978, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsBlock = false,
                            Name = "Nguyễn Thị Ngọc Hương",
                            PhoneNumber = "0904803457",
                            Position = "Chủ",
                            TypeOfBusiness = "Quán ăn"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Cai Lậy, Tiền Giang",
                            DoB = new DateTime(1979, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsBlock = false,
                            Name = "Trần Văn Tình",
                            PhoneNumber = "0947514514",
                            Position = "Chủ",
                            TypeOfBusiness = "Resort"
                        });
                });

            modelBuilder.Entity("CMS_1.Models.Gift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GiftCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("IdCampaign")
                        .HasColumnType("int");

                    b.Property<int?>("IdGiftCategory")
                        .HasColumnType("int");

                    b.Property<int>("UsageLimit")
                        .HasColumnType("int");

                    b.Property<int>("Used")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCampaign");

                    b.HasIndex("IdGiftCategory");

                    b.ToTable("Gift");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateDate = new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GiftCode = "GIF2DHMAAB3E9Y",
                            IdCampaign = 1,
                            IdGiftCategory = 1,
                            UsageLimit = 1,
                            Used = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateDate = new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GiftCode = "GIF2DERGH1B3WE",
                            IdCampaign = 1,
                            IdGiftCategory = 1,
                            UsageLimit = 1,
                            Used = 1
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateDate = new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GiftCode = "GIF2DQBJLYNCVSD",
                            IdCampaign = 1,
                            IdGiftCategory = 2,
                            UsageLimit = 1,
                            Used = 1
                        });
                });

            modelBuilder.Entity("CMS_1.Models.GiftCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Decription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("GiftCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Count = 2,
                            CreateDate = new DateTime(2020, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Decription = "Hạt nêm Knorr Chay Nấm Hương 400g",
                            Name = "Hạt nêm Knorr Chay Nấm Hương 400g"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Count = 1,
                            CreateDate = new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Decription = "Hạt nêm Knorr Từ Thịt Thăn, Xương Ống & Tủy 600gr",
                            Name = "Hạt nêm Knorr Từ Thịt Thăn, Xương Ống & Tủy 600gr"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Count = 0,
                            CreateDate = new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Decription = "Gia vị Hoàn Chỉnh Knorr Canh Chua 30g",
                            Name = "Gia vị Hoàn Chỉnh Knorr Canh Chua 30g"
                        });
                });

            modelBuilder.Entity("CMS_1.Models.ProgramSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProgramSize");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bulk codes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Standalone code"
                        });
                });

            modelBuilder.Entity("CMS_1.Models.RepeatSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("RepeatSchedule");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Monthly on day"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Weekly on"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Repeat daily"
                        });
                });

            modelBuilder.Entity("CMS_1.Models.RuleOfGift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("AllDay")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GiftCount")
                        .HasColumnType("int");

                    b.Property<int?>("IdGiftCategory")
                        .HasColumnType("int");

                    b.Property<int?>("IdIdRepeatSchedule")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Probability")
                        .HasColumnType("int");

                    b.Property<string>("ScheduleData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdGiftCategory");

                    b.HasIndex("IdIdRepeatSchedule");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("RuleOfGift");
                });

            modelBuilder.Entity("CMS_1.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "123@gmail.com",
                            Password = "123Aaa"
                        },
                        new
                        {
                            Id = 2,
                            Email = "abc@gmail.com",
                            Password = "123Qwe"
                        });
                });

            modelBuilder.Entity("CMS_1.Models.Winner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int?>("IdGift")
                        .HasColumnType("int");

                    b.Property<bool>("SendGiftStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("WinDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdGift");

                    b.ToTable("Winner");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdCustomer = 1,
                            IdGift = 1,
                            SendGiftStatus = true,
                            WinDate = new DateTime(2020, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            IdCustomer = 2,
                            IdGift = 2,
                            SendGiftStatus = true,
                            WinDate = new DateTime(2020, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            IdCustomer = 3,
                            IdGift = 3,
                            SendGiftStatus = true,
                            WinDate = new DateTime(2020, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CMS_1.Models.Barcode", b =>
                {
                    b.HasOne("CMS_1.Models.Campaignn", "Campaign")
                        .WithMany("Barcodes")
                        .HasForeignKey("IdCampaign");

                    b.HasOne("CMS_1.Models.Charset", "Charset")
                        .WithMany("Barcodes")
                        .HasForeignKey("IdCharset");

                    b.Navigation("Campaign");

                    b.Navigation("Charset");
                });

            modelBuilder.Entity("CMS_1.Models.Campaignn", b =>
                {
                    b.HasOne("CMS_1.Models.ProgramSize", "ProgramSize")
                        .WithMany("Campaigns")
                        .HasForeignKey("IdProgramSize");

                    b.Navigation("ProgramSize");
                });

            modelBuilder.Entity("CMS_1.Models.Gift", b =>
                {
                    b.HasOne("CMS_1.Models.Campaignn", "Campaign")
                        .WithMany("Gifts")
                        .HasForeignKey("IdCampaign");

                    b.HasOne("CMS_1.Models.GiftCategory", "GiftCategory")
                        .WithMany("Gifts")
                        .HasForeignKey("IdGiftCategory");

                    b.Navigation("Campaign");

                    b.Navigation("GiftCategory");
                });

            modelBuilder.Entity("CMS_1.Models.RuleOfGift", b =>
                {
                    b.HasOne("CMS_1.Models.GiftCategory", "GiftCategory")
                        .WithMany("RuleOfGifts")
                        .HasForeignKey("IdGiftCategory");

                    b.HasOne("CMS_1.Models.RepeatSchedule", "repeatSchedule")
                        .WithMany("RuleOfGifts")
                        .HasForeignKey("IdIdRepeatSchedule");

                    b.Navigation("GiftCategory");

                    b.Navigation("repeatSchedule");
                });

            modelBuilder.Entity("CMS_1.Models.Winner", b =>
                {
                    b.HasOne("CMS_1.Models.Customer", "Customer")
                        .WithMany("Winners")
                        .HasForeignKey("IdCustomer");

                    b.HasOne("CMS_1.Models.Gift", "Gift")
                        .WithMany("Winners")
                        .HasForeignKey("IdGift");

                    b.Navigation("Customer");

                    b.Navigation("Gift");
                });

            modelBuilder.Entity("CMS_1.Models.Campaignn", b =>
                {
                    b.Navigation("Barcodes");

                    b.Navigation("Gifts");
                });

            modelBuilder.Entity("CMS_1.Models.Charset", b =>
                {
                    b.Navigation("Barcodes");
                });

            modelBuilder.Entity("CMS_1.Models.Customer", b =>
                {
                    b.Navigation("Winners");
                });

            modelBuilder.Entity("CMS_1.Models.Gift", b =>
                {
                    b.Navigation("Winners");
                });

            modelBuilder.Entity("CMS_1.Models.GiftCategory", b =>
                {
                    b.Navigation("Gifts");

                    b.Navigation("RuleOfGifts");
                });

            modelBuilder.Entity("CMS_1.Models.ProgramSize", b =>
                {
                    b.Navigation("Campaigns");
                });

            modelBuilder.Entity("CMS_1.Models.RepeatSchedule", b =>
                {
                    b.Navigation("RuleOfGifts");
                });
#pragma warning restore 612, 618
        }
    }
}
